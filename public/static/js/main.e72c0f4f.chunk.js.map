{"version":3,"sources":["redux/reducers/stopsReducer.js","lib/auth-service.js","lib/user-service.js","lib/Auth.js","components/NavbarComp.js","lib/stop-service.js","components/Search.js","pages/Home.js","pages/Signup.js","pages/Login.js","pages/Private.js","pages/StopPage.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["initialState","stopsReducer","state","action","type","payload","axiosRequestFunctions","this","auth","axios","create","baseURL","process","withCredentials","username","password","post","then","data","get","userFunctions","user","response","delete","React","createContext","Consumer","Provider","withAuth","WrappedComponent","props","valueFromProvider","isLoggedIn","isLoading","login","signup","logout","deleteUser","AuthProvider","authService","setState","catch","err","console","log","userService","me","value","children","Component","nextProps","Navbar","bg","variant","Nav","className","activeKey","Item","to","activeClassName","Button","size","onClick","fetchStopDataFunctions","stop","id","Search","searchFor","searchResults","search","text","filteredStops","stopsData","filter","stop_name","toLowerCase","includes","handleSearchInput","e","target","length","stopService","getAll","serverData","addAllStops","stopsearch","class","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","onChange","aria-describedby","map","key","stop_code","Card","Body","style","padding","_id","connect","dispatch","stopsFromServer","handleFormSubmit","event","preventDefault","handleChange","name","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","textAlign","userFaves","favourites","arrayFromServer","isFave","handleLike","stopID","save","saved","unsave","unsaved","match","params","getOne","stopFromServer","userFavourites","fave","forEach","favstop","thisStop","zone_id","stop_lat","stop_lon","backgroundColor","exact","path","component","render","App","Home","Signup","Login","StopPage","Private","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e72c0f4f.chunk.js","sourcesContent":["\r\nconst initialState = []\r\n\r\nconst stopsReducer = (state=initialState, action) => {\r\n    //return state\r\n    switch (action.type) {\r\n        case \"ADD_ALL_STOPS\":\r\n            return [...state, ...action.payload] //take previous state and add payload coming from action \r\n            //!! creating a new state, NOT trying to modify existing\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default stopsReducer","import axios from \"axios\";\r\n\r\nclass Auth {\r\n  constructor() {\r\n    this.auth = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL, //use env values here //(process.env.REACT_APP_API_URL + '/api/projects', body)\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  signup({ username, password }) {\r\n    return this.auth\r\n      .post(\"/auth/signup\", { username, password })\r\n      .then(({ data }) => data); // taking data out of response object with destructuring\r\n    // .then((response) => response.data);\r\n  }\r\n\r\n  login({ username, password }) {\r\n    return this.auth\r\n      .post(\"/auth/login\", { username, password })\r\n      .then(({ data }) => data);\r\n    // .then((response) => response.data);\r\n  }\r\n\r\n  logout() {\r\n    return this.auth.get(\"/auth/logout\", {}).then(({ data }) => data);\r\n    // return this.auth.get(\"/auth/logout\", {}).then((response) => response.data);\r\n  }\r\n\r\n  me() {\r\n    return this.auth.get(\"/auth/me\").then(({ data }) => data);\r\n    // return this.auth.get(\"/auth/me\").then((response) => response.data);\r\n  }\r\n}\r\n\r\nconst axiosRequestFunctions = new Auth();\r\n\r\nexport default axiosRequestFunctions;\r\n","import axios from \"axios\";\r\n\r\nclass User {\r\n    constructor() {\r\n        this.user = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL, // use env values here\r\n            withCredentials: true // need to investigate this further.. \r\n        })\r\n    }\r\n\r\n    favourites() {\r\n        return this.user\r\n        .get(\"/user/favourites\")\r\n        .then((response) => response.data)\r\n    }\r\n\r\n    delete() {\r\n        return this.user\r\n        .delete(\"user/delete\") // should work since in backend we get the user from req.session.currentUSer\r\n        .then((response) => response.data)\r\n    }\r\n}\r\n\r\nconst userFunctions = new User()\r\nexport default userFunctions","import React from 'react';\r\n\r\nimport authService from \"./auth-service\";\r\nimport userService from \"./user-service\";\r\nconst {Consumer, Provider} = React.createContext();\r\n\r\n\r\n// CHECK THE PORTS!!\r\n// authService\r\n//       .signup({ firstName, lastName, email, password })\r\n//       .then(user => this.setState({ isLoggedin: true, user }))\r\n//       .catch(err => console.log(err) );\r\n\r\n\r\n\r\n// HOC\r\nfunction withAuth(WrappedComponent) {\r\n\r\n  return function (props) {\r\n    return (\r\n      <Consumer>\r\n        {(valueFromProvider) => (\r\n          <WrappedComponent\r\n            {...props}\r\n            user={valueFromProvider.user}\r\n            isLoggedIn={valueFromProvider.isLoggedIn}\r\n            isLoading={valueFromProvider.isLoading}\r\n            //errorMessage={valueFromProvider.errorMessage}\r\n            login={valueFromProvider.login}\r\n            signup={valueFromProvider.signup}\r\n            logout={valueFromProvider.logout}\r\n            deleteUser={valueFromProvider.deleteUser}\r\n          />\r\n        )}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nclass AuthProvider extends React.Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n    //errorMessage: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // When app and AuthProvider load for the first time\r\n    // make a call to the server '/me' and check if user is authenitcated\r\n    // axios.get('http://localhost:5666/auth/me', { withCredentials: true })\r\n    authService.me()\r\n      .then((user) => { // maybe we want to get favStops at the same time and save them to the state (and update in StopPage)\r\n        this.setState({isLoggedIn: true, isLoading: false, user});\r\n      })\r\n      .catch((err) => this.setState({isLoggedIn: false, isLoading: false, user: null}));\r\n  }\r\n\r\n  login = (username, password) => {\r\n    authService.login({username, password})\r\n      // axios.post('http://localhost:5666/auth/login', { username, password }, { withCredentials: true })\r\n      .then((user) => {\r\n        this.setState({isLoggedIn: true, isLoading: false, user});//, errorMessage: null\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null});//, errorMessage: \"Login failed\"\r\n      }); // we only consolelog this error but to change the RENDERING, we should \r\n    // somehow^TM handle it\r\n    // cretae error object and check in views if it exists ?\r\n  }\r\n  signup = (username, password) => {\r\n    // axios.post('http://localhost:5666/auth/signup', { username, password }, { withCredentials: true })\r\n    authService.signup({username, password})\r\n      .then((user) => {\r\n        // const user = response.data; dont need this with authServices\r\n        this.setState({isLoggedIn: true, isLoading: false, user});\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null})//, errorMessage: \"Signup failed\"\r\n      });\r\n  }\r\n  logout = () => {\r\n    // axios.get('http://localhost:5666/auth/logout', { withCredentials: true })\r\n    authService.logout()\r\n      .then(() => {\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null});\r\n        // can we set other stuff here as well? to fix that after login/logout teh faves show wrong?\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  deleteUser = () => {\r\n    userService.delete()\r\n    .then(() => {\r\n      this.setState({isLoggedIn: false, isLoading: false, user: null})\r\n    })\r\n    .catch((err) => { console.log(err)} )\r\n  }\r\n\r\n  render() {\r\n    const {user, isLoggedIn, isLoading} = this.state;//, errorMessage\r\n    const {login, signup, logout, deleteUser} = this;\r\n\r\n    return (\r\n      <Provider value={{user, isLoggedIn, isLoading, login, signup, logout, deleteUser}}>\r\n        {this.props.children}\r\n      </Provider>//, errorMessage after isLoading\r\n    )\r\n  }\r\n}\r\n\r\nexport {withAuth, AuthProvider}","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport '../App.css';\r\n\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nclass NavbarComp extends Component {\r\n  \r\n  shouldComponentUpdate(nextProps) {\r\n    return (this.props.user !== nextProps.user)\r\n  }\r\n\r\n  render() {\r\n    // `user`, `logout`, `isLoggedIn` are coming from the AuthProvider \r\n    // and are injected by the withAuth HOC\r\n    const { user, logout, isLoggedIn } = this.props;\r\n\r\n\r\n  //   return (\r\n  //     <nav className=\"navbar\">\r\n  //       <Link to={'/'} id='home-btn'>\r\n  //         <h4>Search for stops</h4>\r\n  //       </Link>\r\n  //       {\r\n  //         isLoggedIn\r\n  //           ? <div>\r\n  //             <p>{user.username}</p>\r\n  //             <button onClick={logout}> Logout </button>\r\n  //             <br />\r\n  //               <Link to=\"/private\">\r\n  //                 {' '}\r\n  //                 <button className=\"navbar-button\">My Page</button>{' '}\r\n  //               </Link>\r\n  //           </div>\r\n  //           : (\r\n  //             <>\r\n  //               <Link to=\"/login\">\r\n  //                 {' '}\r\n  //                 <button className=\"navbar-button\">Login</button>{' '}\r\n  //               </Link>\r\n  //               <br />\r\n  //               <Link to=\"/signup\">\r\n  //                 {' '}\r\n  //                 <button className=\"navbar-button\">Sign Up</button>{' '}\r\n  //               </Link>\r\n\r\n  //             </>\r\n  //           )}\r\n  //     </nav>\r\n  //   );\r\n  // }\r\n\r\n  // refactor render:\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Nav className=\"nav\" activeKey=\"/\" variant=\"pills\" >\r\n      <Nav.Item> \r\n        <NavLink to=\"/\" activeClassName=\"active\"> \r\n        <Button size=\"lg\" variant=\"outline-info\"> Search for stops </Button>\r\n        </NavLink>\r\n      </Nav.Item>\r\n    \r\n      \r\n      {/* <NavLink to=\"blabla\" activeClassName=\"active\" exact>home</NavLink> */}  \r\n\r\n      {isLoggedIn\r\n      ? (\r\n      <>\r\n        <Nav.Item>\r\n        <Link to=\"/private\" ><Button size=\"lg\" variant=\"outline-info\"> My page </Button></Link>\r\n        </Nav.Item>\r\n      \r\n\r\n      \r\n      <Nav.Item>\r\n       <Button onClick={this.props.logout} size=\"lg\" variant=\"outline-info\"> Logout </Button>\r\n      </Nav.Item>\r\n      </>\r\n      \r\n        /* <Nav.Item>\r\n          <Nav.Link eventKey=\"/logout\" onClick={logout}> Logout </Nav.Link>\r\n        </Nav.Item> */\r\n      )\r\n      : \r\n      <>\r\n      <Nav.Item>\r\n        <Link to=\"/signup\"><Button size=\"lg\" variant=\"outline-info\"> Signup </Button></Link>\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n         <Link to=\"/login\"><Button size=\"lg\" variant=\"outline-info\"> Login </Button></Link>\r\n      </Nav.Item>\r\n      </>\r\n      }\r\n    </Nav>\r\n    </Navbar>\r\n  );\r\n  }\r\n\r\n}\r\n\r\n/* <Nav\r\n  activeKey=\"/home\"\r\n  onSelect={(selectedKey) => alert(`selected ${selectedKey}`)}\r\n  >\r\n  <Nav.Item>\r\n  <Nav.Link href=\"/home\">Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n    </Nav.Item>\r\n  <Nav.Item>\r\n  <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n  <Nav.Link eventKey=\"disabled\" disabled>\r\n  Disabled\r\n    </Nav.Link>\r\n    </Nav.Item>\r\n  </Nav> */\r\n\r\n  export default withAuth(NavbarComp);","import axios from \"axios\"\r\n\r\nclass Stop {\r\n    constructor() {\r\n        this.stop = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL,\r\n            withCredentials: true\r\n        })\r\n    }\r\n\r\n    getAll() {\r\n        return this.stop\r\n        .get(\"/stops\")\r\n        .then((response) => response.data)\r\n        // so yeah no error handling here\r\n    }\r\n\r\n    getOne(id) {\r\n        return this.stop\r\n        .get(`/stops/${id}`)\r\n        .then((response) => response.data)\r\n    }\r\n\r\n    // this one is a POST!\r\n    save(id) {\r\n        return this.stop\r\n        .post(`/stops/${id}/save`) //\"/:id/save\"\r\n        .then((response) => response.data)\r\n    }\r\n\r\n    unsave(id) {\r\n        return this.stop\r\n        .post(`/stops/${id}/unsave`)\r\n        .then(response => response.data)\r\n    }\r\n}\r\n\r\nconst fetchStopDataFunctions = new Stop()\r\n\r\nexport default fetchStopDataFunctions","//axios.post('http://localhost:5666/auth/signup', { username, password }, { withCredentials: true })\r\nimport React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport stopService from \"../lib/stop-service\"\r\nimport {connect} from \"react-redux\"\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    state = {\r\n        //data: [],\r\n        searchFor: \"\",\r\n        searchResults: [],\r\n        //loading: true // USE REDUX!!!\r\n    } \r\n\r\n    componentDidMount() {\r\n        // 1) hard-coded version\r\n        // axios.get(\"http://localhost:5666/stops/\")\r\n        // .then( (response) => {\r\n        //     const serverData = response.data\r\n        //     console.log('serverData', serverData)\r\n        //     this.setState({data: serverData})\r\n        // } )\r\n\r\n        // 2) using stopService AND redux\r\n\r\n    const stopsDataExists = (this.props.stopsData.length > 0)\r\n\r\n    if (stopsDataExists) {\r\n        return //dont try to get the data again!\r\n    }\r\n        stopService.getAll()\r\n        .then( serverData => {\r\n            console.log('serverData with stopService getAll me:', serverData)\r\n            this.props.addAllStops(serverData)\r\n            //this.setState({loading: false})\r\n        })\r\n\r\n        .catch((err) => console.log(\"error while getting data from server\",err))\r\n    }\r\n\r\n    search = (text) => { // change this to consume data that redux provides\r\n        let filteredStops = this.props.stopsData.filter( stop => {\r\n            return stop.stop_name.toLowerCase().includes(text.toLowerCase())\r\n        } )\r\n        this.setState({searchResults: filteredStops})\r\n    }\r\n\r\n    handleSearchInput = (e) => {\r\n        let {value} = e.target;\r\n        //console.log('value from search:', value) // it works! no need to log this anymore\r\n        this.setState({searchFor: value}, () => {this.search(value)})\r\n    }\r\n\r\n    render() {\r\n        const stopsearch = this.state.searchResults\r\n        return ( // add bus animation!!\r\n            <div class=\"search-field\">\r\n                {(this.props.stopsData.length > 0)\r\n                ?(\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"basic-addon1\">Search</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                        placeholder=\"Search for bus stops by name\"\r\n                        aria-label=\"Search\"\r\n                        value={this.state.searchFor} \r\n                        onChange={this.handleSearchInput}\r\n                        aria-describedby=\"basic-addon1\"\r\n                        />\r\n                    </InputGroup>\r\n\r\n                // <div>\r\n                //     {/* <label>Search: </label> */}\r\n                //     <input \r\n                //     type=\"text\" \r\n                //     value={this.state.searchFor} \r\n                //     onChange={this.handleSearchInput} \r\n                //     placeholder=\"Search for bus stops by name\" />\r\n                // </div>\r\n                )\r\n                : <p>Loading data...</p>\r\n                }\r\n\r\n{/* <Card>\r\n  <Card.Body>This is some text within a card body.</Card.Body>\r\n</Card> */}\r\n\r\n                <div>\r\n                    {stopsearch.map(stop => {               \r\n                        return (\r\n                            // using stopCode as key since they will NEVER change unless I purge the whole DB\r\n                            <div key={stop.stop_code}>\r\n                           <Card>\r\n                                <Card.Body style={{padding: \"5px 10px\"}}>\r\n                                    <Link to={`/stops/${stop._id}`} >\r\n                                        <h4>{stop.stop_name}</h4>\r\n                                    </Link>\r\n                                </Card.Body>\r\n                           </Card>\r\n\r\n                            </div> // tried to add this inside first Link tag after to={}:  passingstuff={stop} but did not work\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {stopsData: state}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addAllStops: (stopsFromServer) => {\r\n            dispatch({type: \"ADD_ALL_STOPS\", payload: stopsFromServer})} // add stops to redux\r\n    }\r\n}\r\n\r\n// connect redux\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React from 'react'\r\nimport Search from '../components/Search'\r\nimport {withAuth} from '../lib/Auth';\r\nimport '../App.css';\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div class=\"greeting\"> \r\n      {props.isLoggedIn\r\n      ? <h1>Welcome, {props.user.username}! </h1>\r\n      : <h1>Welcome, traveller! </h1> }\r\n      \r\n        <Search/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(Home);","import React, { Component } from \"react\"; // why do we sometimes deconstruct?\r\nimport { Link } from \"react-router-dom\";\r\nimport { withAuth } from './../lib/Auth';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../App.css';\r\n\r\nclass Signup extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    this.props.signup(username, password);\r\n    // this.props.signup method is coming from the AuthProvider\r\n    // injected by the withAuth() HOC\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    return (\r\n      <div class=\"userForm\">\r\n        <h1>Sign Up</h1>\r\n\r\n\r\n        {/* GUARANTEED TO WORK IF BOOTSRAP FAILS! */}\r\n        {/* <form onSubmit={this.handleFormSubmit}>\r\n\r\n          <label>Username:</label>\r\n          <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n\r\n          <label>Password:</label>\r\n          <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n\r\n          <input type=\"submit\" value=\"Signup\" />\r\n        </form> */}\r\n\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n            <Form.Label column sm={2}>\r\n              Username:\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n              <Form.Control type=\"text\" name=\"username\" value={username} onChange={this.handleChange}/>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n            <Form.Label column sm={2} style={{textAlign: \"center\"}} >\r\n              Password:\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n              <Form.Control type=\"password\" name=\"password\" value={password} onChange={this.handleChange}/>\r\n            </Col>\r\n          </Form.Group>\r\n          <Button type=\"submit\" value=\"Signup\">   Signup    </Button>\r\n\r\n          </Form>\r\n        <div id=\"link-login\">\r\n        <p>Already have an account?</p>\r\n        <Link to={\"/login\"}> <Button> Login </Button> </Link>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { withAuth } from './../lib/Auth';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../App.css';\r\n\r\nclass Login extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    this.props.login(username, password);\r\n    // this.props.login method is coming from the AuthProvider\r\n    // injected by the withAuth() HOC\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n      \r\n      return (\r\n\r\n        <div class=\"userForm\">\r\n          <h1>Login</h1>\r\n\r\n          {/* this IS GUARANTEED TO WORK IF BOOTSTRAP FAILS: */}\r\n          {/* <form onSubmit={this.handleFormSubmit}>\r\n  \r\n            <label>Username:</label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n  \r\n            <label>Password:</label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n  \r\n            <input type=\"submit\" value=\"Login\" />\r\n          </form> */}\r\n\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n            <Form.Label column sm={2}>\r\n              Username:\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n              <Form.Control type=\"text\" name=\"username\" value={username} onChange={this.handleChange}/>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n            <Form.Label column sm={2} style={{textAlign: \"center\"}} >\r\n              Password:\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n              <Form.Control type=\"password\" name=\"password\" value={password} onChange={this.handleChange}/>\r\n            </Col>\r\n          </Form.Group>\r\n          <Button type=\"submit\" value=\"Login\">   Login     </Button>\r\n\r\n          </Form>\r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withAuth(Login);\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { withAuth } from './../lib/Auth';\r\nimport userService from \"../lib/user-service\"\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n//import DeleteUser from \"../components/DeleteUser\"; // moved delete function higher up!\r\nimport '../App.css';\r\n\r\n\r\nclass Private extends Component {\r\n\r\n  state = {\r\n    userFaves: null,\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // could I use this to ensure I'm showing user info immediately??\r\n  }\r\n\r\n  componentDidMount() {\r\n    userService.favourites()\r\n    .then(arrayFromServer => {\r\n      console.log('got this array of bus stops from server:', arrayFromServer)\r\n      this.setState({userFaves: arrayFromServer})\r\n    })\r\n  }\r\n\r\n  // deleteMe = () => {\r\n  //   return userService.delete()\r\n  //   .then( deleted => {\r\n  //       console.log('deleted user, hopefully');\r\n  //       console.log('this.props after delete', this.props)\r\n  //       this.props.history.push(\"/\")\r\n        \r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"private\">\r\n        \r\n        {\r\n          this.props.isLoggedIn\r\n            ? <div class=\"greeting\"> <h1 >Welcome, {this.props.user.username}!</h1>\r\n             { (this.state.userFaves !== null) && (this.state.userFaves.length !== 0) ? <h4>Here are your saved bus stops:</h4> : <h4> You haven't saved any bus stops yet! </h4> }\r\n             </div>\r\n            : null\r\n        }\r\n        \r\n        {\r\n          this.state.userFaves !== null \r\n          ? (\r\n            this.state.userFaves.map(stop => {\r\n              return ( // consider another key for this?\r\n              <div class=\"search-field\" key={stop.stop_code}>\r\n                <Link to={`/stops/${stop._id}`}> <h4>{stop.stop_name}, code: {stop.stop_code}</h4>  </Link> \r\n              </div> )\r\n            })\r\n            \r\n            )\r\n          : null\r\n        }\r\n\r\n        {\r\n          this.props.isLoggedIn\r\n          ? <Button variant=\"danger\" onClick={this.props.deleteUser} > Delete user? </Button>// <DeleteUser/>\r\n          : null\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Private);\r\n","import React, { Component } from 'react';\r\nimport stopService from \"../lib/stop-service\"\r\nimport userService from \"../lib/user-service\"\r\n//import authService from \"../lib/auth-service\"\r\nimport {withAuth} from '../lib/Auth';\r\nimport '../Stop.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass StopPage extends Component {\r\n\r\n    state = { // \r\n        stop: {},\r\n        isFave: null\r\n        //isLoading: true\r\n    }\r\n\r\n    handleLike = () => {\r\n        // send POST to server to add or remove this stop from faves\r\n        // use state: is it fave ? yes -> unsave in server : no -> save in server \r\n        const stopID = this.state.stop._id \r\n        console.log('stopID', stopID)\r\n        if (this.state.isFave === false) { // if user has not liked already, like this stop!\r\n            stopService.save(stopID)\r\n            .then(saved => {\r\n                console.log('saved from handleLike()', saved)\r\n                this.setState({isFave: true})\r\n            })\r\n        }\r\n        // let's be super explicit about it and use another if block:\r\n        if (this.state.isFave === true) {\r\n            stopService.unsave(stopID)\r\n            .then(unsaved => {\r\n                console.log('unsaved this stop from handleLike()', unsaved)\r\n                this.setState({isFave: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    // the BIG QUESTION: how to make my stop only render after I got the data from my server??\r\n    componentDidMount() { \r\n        const {id} = this.props.match.params\r\n        console.log('id from componentDidMount:', id)\r\n\r\n        stopService.getOne(id)\r\n        .then(stopFromServer => {\r\n            console.log('stopfromServer inside StopPage compoenntDid*Mount:', stopFromServer)\r\n            // set the stop state ASAP and then check the user favourites for logged-in user\r\n            this.setState({stop: stopFromServer})\r\n            \r\n            if (this.props.isLoggedIn) {\r\n\r\n                userService.favourites()\r\n                .then( userFavourites => {\r\n                    //console.log('userFavourites', userFavourites)\r\n                    //console.log('stopFromServer inside userFavourties, ', stopFromServer)\r\n                    \r\n                    let fave = false; // assume it's not favourite and then check\r\n                    if (userFavourites.length > 0) \r\n                    {userFavourites.forEach(favstop => { // look for each stop in user's favourite stops\r\n                    //console.log(\"the type of \" + favstop._id + \" is: \" + typeof(favstop._id))\r\n                    //console.log('the id from componentdid mountis this? ', id)\r\n                    if (favstop._id === id) {\r\n                        //console.log('we found a match')\r\n                        fave = true\r\n                    }\r\n                })}\r\n                //console.log('fave before setting state', fave)\r\n                this.setState({isFave: fave})\r\n            })\r\n            .catch(err => {\r\n                console.log('error from trying to update user likes', err)\r\n            })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log('err from StopService.GetOne in componentDidmount', err)\r\n        })\r\n        \r\n    }\r\n    \r\n    render() {\r\n         //console.log('this.props.user from render', this.props.user)\r\n        \r\n        let thisStop = this.state.stop\r\n        //console.log('thisStop in render comign from this.state', thisStop)\r\n        //console.log('this.state', this.state)\r\n\r\n        return (\r\n\r\n            <div class=\"stopContain\">\r\n                <div class=\"stopRows\">\r\n               \r\n                <h1>{thisStop.stop_name}</h1>\r\n                <p>Stop code: {thisStop.stop_code} </p> \r\n                <p>Zone: {thisStop.zone_id} </p> \r\n                <p>Coord. {thisStop.stop_lat} N {thisStop.stop_lon} E </p> \r\n\r\n                {this.props.isLoggedIn\r\n                ? (this.state.isFave \r\n                    ? <Button onClick={this.handleLike} variant=\"outline-danger\" style={{backgroundColor: \"pink\"}} >Remove from favourites?</Button>\r\n                    : <Button onClick={this.handleLike} variant=\"outline-success\" > Not fave, wanna save? </Button> )\r\n                : <Link to=\"/login\">Log in to save this stop to favourites </Link> }\r\n\r\n                </div>\r\n            </div>\r\n                \r\n        )    \r\n    }\r\n}\r\n\r\n//export default StopPage\r\nexport default withAuth(StopPage) // needed to get authentication to get favourites","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nfunction PublicRoute(props) {\r\n\r\n  console.log('props :>> ', props);\r\n\r\n  const { exact, path, component, isLoggedIn } = props;\r\n  const Component = component;\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props) => {\r\n        if (isLoggedIn) return <Redirect to=\"/private\" />\r\n        else if (!isLoggedIn) return <Component {...props} />\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default withAuth(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withAuth } from '../lib/Auth';\r\n\r\nfunction PrivateRoute(props) {\r\n  console.log('props :>> ', props);\r\n\r\n  const { exact, path, component, isLoggedIn } = props;\r\n  const Component = component;\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props) => {\r\n        if (isLoggedIn) return <Component {...props} />\r\n        else if (!isLoggedIn) return <Redirect to=\"/login\" />\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default withAuth(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport NavbarComp from './components/NavbarComp';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Private from './pages/Private';\r\nimport StopPage from './pages/StopPage';\r\n\r\nimport PublicRoute from './components/PublicRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavbarComp />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          {/* <PublicRoute exact path=\"/:stopID\"  component={Stop} /> use wikicountires as example!! */}\r\n          \r\n          <PublicRoute exact path=\"/signup\" component={Signup} />\r\n          <PublicRoute exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/stops/:id\" component={StopPage} />\r\n          <PrivateRoute exact path=\"/private\" component={Private} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport stopsReducer from \"./redux/reducers/stopsReducer\"\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport { AuthProvider } from './lib/Auth';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst store = createStore(stopsReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n\r\n  <Router>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </Router>\r\n\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}