{"version":3,"sources":["lib/auth-service.js","lib/Auth.js","components/Navbar.js","lib/stop-service.js","pages/StopPage.js","components/Search.js","pages/Home.js","pages/Signup.js","pages/Login.js","pages/Private.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["axiosRequestFunctions","this","auth","axios","create","baseURL","process","withCredentials","username","password","post","then","data","get","React","createContext","Consumer","Provider","withAuth","WrappedComponent","props","valueFromProvider","user","isLoggedIn","isLoading","login","signup","logout","AuthProvider","state","authService","setState","catch","err","console","log","me","value","children","Component","className","to","id","onClick","fetchStopDataFunctions","stop","response","StopPage","match","params","stopService","getOne","stopFromServer","mystop","name","Search","searchFor","getAll","serverData","stops","action","method","type","map","key","stopCode","_id","Home","handleFormSubmit","event","preventDefault","handleChange","target","onSubmit","onChange","exact","path","component","render","App","Signup","Login","Private","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.83f44489.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass Auth {\r\n  constructor() {\r\n    this.auth = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL, // maybe use env values here :| //(process.env.REACT_APP_API_URL + '/api/projects', body)\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  signup({ username, password }) {\r\n    return this.auth\r\n      .post(\"/auth/signup\", { username, password })\r\n      .then(({ data }) => data); // taking data out of response object with destructuring\r\n    // .then((response) => response.data);\r\n  }\r\n\r\n  login({ username, password }) {\r\n    return this.auth\r\n      .post(\"/auth/login\", { username, password })\r\n      .then(({ data }) => data);\r\n    // .then((response) => response.data);\r\n  }\r\n\r\n  logout() {\r\n    return this.auth.get(\"/auth/logout\", {}).then(({ data }) => data);\r\n    // return this.auth.get(\"/auth/logout\", {}).then((response) => response.data);\r\n  }\r\n\r\n  me() {\r\n    return this.auth.get(\"/auth/me\").then(({ data }) => data);\r\n    // return this.auth.get(\"/auth/me\").then((response) => response.data);\r\n  }\r\n}\r\n\r\nconst axiosRequestFunctions = new Auth();\r\n\r\nexport default axiosRequestFunctions;\r\n","import React from 'react';\r\n\r\nimport authService from \"./auth-service\";\r\nconst {Consumer, Provider} = React.createContext();\r\n\r\n\r\n// CHECK THE PORTS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// authService\r\n//       .signup({ firstName, lastName, email, password })\r\n//       .then(user => this.setState({ isLoggedin: true, user }))\r\n//       .catch(err => console.log(err) );\r\n\r\n\r\n\r\n// HOC\r\nfunction withAuth(WrappedComponent) {\r\n\r\n  return function (props) {\r\n    return (\r\n      <Consumer>\r\n        {(valueFromProvider) => (\r\n          <WrappedComponent\r\n            {...props}\r\n            user={valueFromProvider.user}\r\n            isLoggedIn={valueFromProvider.isLoggedIn}\r\n            isLoading={valueFromProvider.isLoading}\r\n            //errorMessage={valueFromProvider.errorMessage}\r\n            login={valueFromProvider.login}\r\n            signup={valueFromProvider.signup}\r\n            logout={valueFromProvider.logout}\r\n          />\r\n        )}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nclass AuthProvider extends React.Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n    //errorMessage: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // When app and AuthProvider load for the first time\r\n    // make a call to the server '/me' and check if user is authenitcated\r\n    // axios.get('http://localhost:5666/auth/me', { withCredentials: true })\r\n    authService.me()\r\n      .then((user) => { // maybe we want to get favStops at the same time and save them to the state (and update in StopPage)\r\n        this.setState({isLoggedIn: true, isLoading: false, user});\r\n      })\r\n      .catch((err) => this.setState({isLoggedIn: false, isLoading: false, user: null}));\r\n  }\r\n\r\n  login = (username, password) => {\r\n    authService.login({username, password})\r\n      // axios.post('http://localhost:5666/auth/login', { username, password }, { withCredentials: true })\r\n      .then((user) => {\r\n        this.setState({isLoggedIn: true, isLoading: false, user});//, errorMessage: null\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null});//, errorMessage: \"Login failed\"\r\n      }); // we only consolelog this error but to change the RENDERING, we should \r\n    // somehow^TM handle it\r\n    // cretae error object and check in views if it exists ?\r\n  }\r\n  signup = (username, password) => {\r\n    // axios.post('http://localhost:5666/auth/signup', { username, password }, { withCredentials: true })\r\n    authService.signup({username, password})\r\n      .then((user) => {\r\n        // const user = response.data; dont need this with authServices\r\n        this.setState({isLoggedIn: true, isLoading: false, user});\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null})//, errorMessage: \"Signup failed\"\r\n      });\r\n  }\r\n  logout = () => {\r\n    // axios.get('http://localhost:5666/auth/logout', { withCredentials: true })\r\n    authService.logout()\r\n      .then(() => {\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null});\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const {user, isLoggedIn, isLoading} = this.state;//, errorMessage\r\n    const {login, signup, logout} = this;\r\n\r\n    return (\r\n      <Provider value={{user, isLoggedIn, isLoading, login, signup, logout}}>\r\n        {this.props.children}\r\n      </Provider>//, errorMessage this was after isLoading\r\n    )\r\n  }\r\n}\r\n\r\nexport {withAuth, AuthProvider}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from './../lib/Auth'\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    // `user`, `logout`, `isLoggedIn` are coming from the AuthProvider \r\n    // and are injected by the withAuth HOC\r\n    const { user, logout, isLoggedIn } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Link to={'/'} id='home-btn'>\r\n          <h4>Home</h4>\r\n        </Link>\r\n        {\r\n          isLoggedIn\r\n            ? <div>\r\n              <p>{user.username}</p>\r\n              <button onClick={logout}> Logout </button>\r\n            </div>\r\n            : (\r\n              <>\r\n                <Link to=\"/login\">\r\n                  {' '}\r\n                  <button className=\"navbar-button\">Login</button>{' '}\r\n                </Link>\r\n                <br />\r\n                <Link to=\"/signup\">\r\n                  {' '}\r\n                  <button className=\"navbar-button\">Sign Up</button>{' '}\r\n                </Link>\r\n              </>\r\n            )}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Navbar);\r\n","import axios from \"axios\"\r\n\r\nclass Stop {\r\n    constructor() {\r\n        this.stop = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL, // maybe use env values here :|\r\n            withCredentials: true // is this needed??? some of these methods will need to know if a user is logged in\r\n        })\r\n    }\r\n\r\n    getAll() {\r\n        return this.stop\r\n        .get(\"/stops\")\r\n        .then((response) => response.data)\r\n        // so yeah no error handling here\r\n    }\r\n\r\n    getOne(id) {\r\n        return this.stop\r\n        .get(`/stops/${id}`)\r\n        .then((response) => response.data)\r\n    }\r\n}\r\n\r\nconst fetchStopDataFunctions = new Stop()\r\n\r\nexport default fetchStopDataFunctions","import React, { Component } from 'react';\r\nimport stopService from \"../lib/stop-service\"\r\nimport authService from \"../lib/auth-service\"\r\nimport {withAuth} from '../lib/Auth';\r\n\r\n\r\nclass StopPage extends Component {\r\n\r\n    state = { // the issue seems to be that this state is valid even for login page..\r\n        stop: {},\r\n        //isLoading: true\r\n        //isFave: undefined // should be bool\r\n    }\r\n\r\n    // auth and user, should they be combined?\r\n    //user service should post save/unsave a stop. it should get what current favourites are? obviously delete user.\r\n    // can I save stuff from both user and auth to state? maybe it's good to have user favStops array in the (provider) state?\r\n    // what the hell is the relationship between Auth.js and auth-service?\r\n\r\n    // the BIG QUESTION: how to make my stop only render after I got the data from my server??\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params\r\n        console.log('id from componentDidMount:', id)\r\n\r\n        \r\n        stopService.getOne(id)\r\n        .then(stopFromServer => {\r\n            console.log('stopfromServer inside StopPage compoenntDid*Mount:', stopFromServer)\r\n            this.setState({stop: stopFromServer, isLoading: false})\r\n        })\r\n        \r\n        // is there a user??\r\n        // authService.me()\r\n        // .then( userdata => {\r\n        //     console.log('userdata from stpPage componentdid mount:', userdata)\r\n        // } ) but this should already be in req.session!!\r\n\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        \r\n        //console.log('this.props.match is:', this.props.match) // it always prints twice in the console, why?????\r\n        \r\n        \r\n        let mystop = this.state.stop\r\n        console.log('mystop should be now a stop...', mystop)\r\n        // let buses = mystop.busLines.map( bus => {\r\n        //     return `${bus}, ` })\r\n        \r\n\r\n        // console.log('buses', buses)\r\n\r\n        // FUCKING HELL THIS NOW RENDERS IN LOGIN AND SIGNUP WTF???\r\n        return (\r\n            // (this.state.isLoading? <h2>still loading page...</h2>\r\n            // : \r\n            <div>\r\n                <h1>heya this is {mystop.name} page</h1>\r\n                <p>buses servicing this stop: {} </p> \r\n                {/* tried using spread to get the bus lines but nah dont work */}\r\n            </div>\r\n                \r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default StopPage\r\n//export default withAuth(StopPage) tried if this changes the fact that StopPage fucks up both login and signup","//axios.post('http://localhost:5666/auth/signup', { username, password }, { withCredentials: true })\r\nimport React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport axios from \"axios\"\r\nimport stopService from \"../lib/stop-service\"\r\nimport StopPage from '../pages/StopPage';\r\n\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        searchFor: \"\"\r\n    } \r\n\r\n    componentDidMount() {\r\n        // 1) hard-coded version\r\n        // axios.get(\"http://localhost:5666/stops/\")\r\n        // .then( (response) => {\r\n        //     const serverData = response.data\r\n        //     console.log('serverData', serverData)\r\n        //     this.setState({data: serverData})\r\n        // } )\r\n        // 2) using stopService\r\n        stopService.getAll()\r\n        .then( serverData => {\r\n            console.log('serverData with stopService getAll me:', serverData)\r\n            this.setState({data: serverData})\r\n        })\r\n\r\n        .catch((err) => console.log(\"error while getting data from server\",err))\r\n    }\r\n\r\n    render() {\r\n        const stops = this.state.data\r\n        return (\r\n            <div>\r\n                <form action=\"\" method=\"get\">\r\n                    <label>Search: </label>\r\n                {/* <label>Password:</label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} /> */}\r\n            <button type=\"submit\" >oikeesti tää ei ees mittään vaikka submit button onkin</button>\r\n                </form>\r\n\r\n                <div>\r\n                    <p>trying to display all stops here:</p>\r\n                    {stops.map(stop => {               \r\n                        return (\r\n                            // using stopCode as key since they will NEVER change unless I purge the whole DB\r\n                            //<h3 key={stop.stopCode}>{stop.name}</h3>\r\n                            <div key={stop.stopCode}>\r\n                            <Link to={`/${stop._id}`} >\r\n                                <h4>{stop.name}</h4>\r\n                            </Link>\r\n                            </div> // tried to add this inside first Link tag after to={}:  passingstuff={stop} but did not work\r\n                        )\r\n                        \r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Search from '../components/Search'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div> \r\n      <h1>Home Page</h1>\r\n        <Search/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nclass Signup extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    this.props.signup(username, password);\r\n    // this.props.signup method is coming from the AuthProvider\r\n    // injected by the withAuth() HOC\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Sign Up</h1>\r\n\r\n        {/* {this.props.errorMessage? <h1> {this.props.errorMessage} </h1> : null } */}\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n\r\n          <label>Username:</label>\r\n          <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n\r\n          <label>Password:</label>\r\n          <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n\r\n          <input type=\"submit\" value=\"Signup\" />\r\n        </form>\r\n\r\n        <p>Already have account?</p>\r\n        <Link to={\"/login\"}> Login</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nclass Login extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    this.props.login(username, password);\r\n    // this.props.login method is coming from the AuthProvider\r\n    // injected by the withAuth() HOC\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // handleOk = event => {\r\n  //   this.setState({ errorMessage: null })\r\n  // }\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n\r\n    // if (this.props.errorMessage) {\r\n    //   return (\r\n    //   <div>\r\n    //     <h1> {this.props.errorMessage} </h1>\r\n    //     <button onClick={this.handleOk} > OK I GUESS </button>\r\n\r\n    //   </div>)\r\n    // }\r\n      \r\n      return (\r\n\r\n        \r\n\r\n        <div>\r\n          <h1>Login</h1>\r\n\r\n          {/* {this.props.errorMessage? <h1> {this.props.errorMessage} </h1> : null } */}\r\n  \r\n          <form onSubmit={this.handleFormSubmit}>\r\n  \r\n            <label>Username:</label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n  \r\n            <label>Password:</label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n  \r\n            <input type=\"submit\" value=\"Login\" />\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withAuth(Login);\r\n","import React, { Component } from \"react\";\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nclass Private extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Private Route</h1>\r\n        {\r\n          this.props.isLoggedIn\r\n            ? <h3>Username: {this.props.user.username}</h3>\r\n            : null\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Private);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nfunction PublicRoute(props) {\r\n\r\n  console.log('props :>> ', props);\r\n\r\n  const { exact, path, component, isLoggedIn } = props;\r\n  const Component = component;\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props) => {\r\n        if (isLoggedIn) return <Redirect to=\"/private\" />\r\n        else if (!isLoggedIn) return <Component {...props} />\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default withAuth(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withAuth } from '../lib/Auth';\r\n\r\nfunction PrivateRoute(props) {\r\n  console.log('props :>> ', props);\r\n\r\n  const { exact, path, component, isLoggedIn } = props;\r\n  const Component = component;\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props) => {\r\n        if (isLoggedIn) return <Component {...props} />\r\n        else if (!isLoggedIn) return <Redirect to=\"/login\" />\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default withAuth(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Private from './pages/Private';\r\nimport StopPage from './pages/StopPage';\r\n\r\nimport PublicRoute from './components/PublicRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Navbar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          {/* <PublicRoute exact path=\"/:stopID\"  component={Stop} /> use wikicountires as example!! */}\r\n          <PublicRoute exact path=\"/:id\" component={StopPage} />\r\n          \r\n          <PublicRoute exact path=\"/signup\" component={Signup} />\r\n          <PublicRoute exact path=\"/login\" component={Login} />\r\n          <PrivateRoute exact path=\"/private\" component={Private} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport { AuthProvider } from './lib/Auth';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </Router>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}