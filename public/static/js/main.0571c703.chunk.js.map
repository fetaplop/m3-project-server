{"version":3,"sources":["lib/auth-service.js","lib/user-service.js","lib/Auth.js","components/Navbar.js","lib/stop-service.js","pages/StopPage.js","components/Search.js","pages/Home.js","pages/Signup.js","pages/Login.js","pages/Private.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["axiosRequestFunctions","this","auth","axios","create","baseURL","process","withCredentials","username","password","post","then","data","get","userFunctions","user","response","delete","React","createContext","Consumer","Provider","withAuth","WrappedComponent","props","valueFromProvider","isLoggedIn","isLoading","login","signup","logout","deleteUser","AuthProvider","state","authService","setState","catch","err","console","log","userService","me","value","children","Component","nextProps","className","to","id","onClick","fetchStopDataFunctions","stop","isFave","handleLike","stopID","_id","stopService","save","saved","unsave","unsaved","match","params","getOne","stopFromServer","favourites","userFavourites","fave","length","forEach","favstop","nextState","mystop","name","style","backgroundColor","Search","searchFor","searchResults","search","text","filteredStops","filter","toLowerCase","includes","handleSearchInput","e","target","getAll","serverData","stopsearch","type","onChange","placeholder","map","key","stopCode","Home","handleFormSubmit","event","preventDefault","handleChange","onSubmit","userFaves","arrayFromServer","exact","path","component","render","App","Signup","Login","StopPage","Private","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0571c703.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass Auth {\r\n  constructor() {\r\n    this.auth = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL, // maybe use env values here :| //(process.env.REACT_APP_API_URL + '/api/projects', body)\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  signup({ username, password }) {\r\n    return this.auth\r\n      .post(\"/auth/signup\", { username, password })\r\n      .then(({ data }) => data); // taking data out of response object with destructuring\r\n    // .then((response) => response.data);\r\n  }\r\n\r\n  login({ username, password }) {\r\n    return this.auth\r\n      .post(\"/auth/login\", { username, password })\r\n      .then(({ data }) => data);\r\n    // .then((response) => response.data);\r\n  }\r\n\r\n  logout() {\r\n    return this.auth.get(\"/auth/logout\", {}).then(({ data }) => data);\r\n    // return this.auth.get(\"/auth/logout\", {}).then((response) => response.data);\r\n  }\r\n\r\n  me() {\r\n    return this.auth.get(\"/auth/me\").then(({ data }) => data);\r\n    // return this.auth.get(\"/auth/me\").then((response) => response.data);\r\n  }\r\n}\r\n\r\nconst axiosRequestFunctions = new Auth();\r\n\r\nexport default axiosRequestFunctions;\r\n","import axios from \"axios\";\r\n\r\nclass User {\r\n    constructor() {\r\n        this.user = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL, // maybe use env values here :|\r\n            withCredentials: true // is this needed??? some of these methods will need to know if a user is logged in\r\n        })\r\n    }\r\n\r\n    favourites() {\r\n        return this.user\r\n        .get(\"/user/favourites\")\r\n        .then((response) => response.data)\r\n    }\r\n\r\n    delete() {\r\n        return this.user\r\n        .delete(\"user/delete\") // should work since in backend we get the user from req.session.currentUSer\r\n        .then((response) => response.data)\r\n    }\r\n}\r\n\r\nconst userFunctions = new User()\r\nexport default userFunctions","import React from 'react';\r\n\r\nimport authService from \"./auth-service\";\r\nimport userService from \"./user-service\";\r\nconst {Consumer, Provider} = React.createContext();\r\n\r\n\r\n// CHECK THE PORTS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// authService\r\n//       .signup({ firstName, lastName, email, password })\r\n//       .then(user => this.setState({ isLoggedin: true, user }))\r\n//       .catch(err => console.log(err) );\r\n\r\n\r\n\r\n// HOC\r\nfunction withAuth(WrappedComponent) {\r\n\r\n  return function (props) {\r\n    return (\r\n      <Consumer>\r\n        {(valueFromProvider) => (\r\n          <WrappedComponent\r\n            {...props}\r\n            user={valueFromProvider.user}\r\n            isLoggedIn={valueFromProvider.isLoggedIn}\r\n            isLoading={valueFromProvider.isLoading}\r\n            //errorMessage={valueFromProvider.errorMessage}\r\n            login={valueFromProvider.login}\r\n            signup={valueFromProvider.signup}\r\n            logout={valueFromProvider.logout}\r\n            deleteUser={valueFromProvider.deleteUser}\r\n          />\r\n        )}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nclass AuthProvider extends React.Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n    //errorMessage: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // When app and AuthProvider load for the first time\r\n    // make a call to the server '/me' and check if user is authenitcated\r\n    // axios.get('http://localhost:5666/auth/me', { withCredentials: true })\r\n    authService.me()\r\n      .then((user) => { // maybe we want to get favStops at the same time and save them to the state (and update in StopPage)\r\n        this.setState({isLoggedIn: true, isLoading: false, user});\r\n      })\r\n      .catch((err) => this.setState({isLoggedIn: false, isLoading: false, user: null}));\r\n  }\r\n\r\n  login = (username, password) => {\r\n    authService.login({username, password})\r\n      // axios.post('http://localhost:5666/auth/login', { username, password }, { withCredentials: true })\r\n      .then((user) => {\r\n        this.setState({isLoggedIn: true, isLoading: false, user});//, errorMessage: null\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null});//, errorMessage: \"Login failed\"\r\n      }); // we only consolelog this error but to change the RENDERING, we should \r\n    // somehow^TM handle it\r\n    // cretae error object and check in views if it exists ?\r\n  }\r\n  signup = (username, password) => {\r\n    // axios.post('http://localhost:5666/auth/signup', { username, password }, { withCredentials: true })\r\n    authService.signup({username, password})\r\n      .then((user) => {\r\n        // const user = response.data; dont need this with authServices\r\n        this.setState({isLoggedIn: true, isLoading: false, user});\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null})//, errorMessage: \"Signup failed\"\r\n      });\r\n  }\r\n  logout = () => {\r\n    // axios.get('http://localhost:5666/auth/logout', { withCredentials: true })\r\n    authService.logout()\r\n      .then(() => {\r\n        this.setState({isLoggedIn: false, isLoading: false, user: null});\r\n        // can we set other stuff here as well? to fix that after login/logout teh faves show wrong?\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  deleteUser = () => {\r\n    userService.delete()\r\n    .then(() => {\r\n      this.setState({isLoggedIn: false, isLoading: false, user: null})\r\n    })\r\n    .catch((err) => { console.log(err)} )\r\n  }\r\n\r\n  render() {\r\n    const {user, isLoggedIn, isLoading} = this.state;//, errorMessage\r\n    const {login, signup, logout, deleteUser} = this;\r\n\r\n    return (\r\n      <Provider value={{user, isLoggedIn, isLoading, login, signup, logout, deleteUser}}>\r\n        {this.props.children}\r\n      </Provider>//, errorMessage this was after isLoading\r\n    )\r\n  }\r\n}\r\n\r\nexport {withAuth, AuthProvider}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from './../lib/Auth'\r\n\r\nclass Navbar extends Component {\r\n  \r\n  shouldComponentUpdate(nextProps) {\r\n    return (this.props.user !== nextProps.user)\r\n  }\r\n\r\n  render() {\r\n    // `user`, `logout`, `isLoggedIn` are coming from the AuthProvider \r\n    // and are injected by the withAuth HOC\r\n    const { user, logout, isLoggedIn } = this.props;\r\n\r\n\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Link to={'/'} id='home-btn'>\r\n          <h4>Search for stops</h4>\r\n        </Link>\r\n        {\r\n          isLoggedIn\r\n            ? <div>\r\n              <p>{user.username}</p>\r\n              <button onClick={logout}> Logout </button>\r\n              <br />\r\n                <Link to=\"/private\">\r\n                  {' '}\r\n                  <button className=\"navbar-button\">My Page</button>{' '}\r\n                </Link>\r\n            </div>\r\n            : (\r\n              <>\r\n                <Link to=\"/login\">\r\n                  {' '}\r\n                  <button className=\"navbar-button\">Login</button>{' '}\r\n                </Link>\r\n                <br />\r\n                <Link to=\"/signup\">\r\n                  {' '}\r\n                  <button className=\"navbar-button\">Sign Up</button>{' '}\r\n                </Link>\r\n\r\n              </>\r\n            )}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Navbar);\r\n","import axios from \"axios\"\r\n\r\nclass Stop {\r\n    constructor() {\r\n        this.stop = axios.create({\r\n            baseURL: process.env.REACT_APP_API_URL, // maybe use env values here :|\r\n            withCredentials: true // is this needed??? some of these methods will need to know if a user is logged in\r\n        })\r\n    }\r\n\r\n    getAll() {\r\n        return this.stop\r\n        .get(\"/stops\")\r\n        .then((response) => response.data)\r\n        // so yeah no error handling here\r\n    }\r\n\r\n    getOne(id) {\r\n        return this.stop\r\n        .get(`/stops/${id}`)\r\n        .then((response) => response.data)\r\n    }\r\n\r\n    // this one is a POST!\r\n    save(id) {\r\n        return this.stop\r\n        .post(`/stops/${id}/save`) //\"/:id/save\"\r\n        .then((response) => response.data)\r\n    }\r\n\r\n    unsave(id) {\r\n        return this.stop\r\n        .post(`/stops/${id}/unsave`)\r\n        .then(response => response.data)\r\n    }\r\n}\r\n\r\nconst fetchStopDataFunctions = new Stop()\r\n\r\nexport default fetchStopDataFunctions","import React, { Component } from 'react';\r\nimport stopService from \"../lib/stop-service\"\r\nimport userService from \"../lib/user-service\"\r\n//import authService from \"../lib/auth-service\"\r\nimport {withAuth} from '../lib/Auth';\r\n\r\n\r\nclass StopPage extends Component {\r\n\r\n    state = { // \r\n        stop: {},\r\n        isFave: null\r\n        //isLoading: true\r\n    }\r\n\r\n    handleLike = () => {\r\n        // send POST to server to add or remove this stop from faves\r\n        // use state: is it fave ? yes -> unsave in server : no -> save in server \r\n        const stopID = this.state.stop._id \r\n        console.log('stopID', stopID)\r\n        if (this.state.isFave === false) { // if user has not liked already, like this stop!\r\n            stopService.save(stopID)\r\n            .then(saved => {\r\n                console.log('saved from handleLike()', saved)\r\n                this.setState({isFave: true})\r\n            })\r\n        }\r\n        // let's be super explicit about it and use another if block:\r\n        if (this.state.isFave === true) {\r\n            stopService.unsave(stopID)\r\n            .then(unsaved => {\r\n                console.log('unsaved this stop from handleLike()', unsaved)\r\n                this.setState({isFave: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    // the BIG QUESTION: how to make my stop only render after I got the data from my server??\r\n    componentDidMount() { // this really eeds to be optimised better..\r\n        const {id} = this.props.match.params\r\n        console.log('id from componentDidMount:', id)\r\n\r\n        // if (this.props.isLoggedIn === true) {\r\n        //     console.log('this.props.user.favStops', this.props.user.favStops)\r\n        // }\r\n\r\n        stopService.getOne(id)\r\n        .then(stopFromServer => {\r\n            console.log('stopfromServer inside StopPage compoenntDid*Mount:', stopFromServer)\r\n            // trying to add state update here since now we don't get the stop displaying as public user\r\n            this.setState({stop: stopFromServer})\r\n            //this.setState({stop: stopFromServer, isLoading: false}) // !! using isLoading here? is it bad, can I even use it with stop-service?\r\n            userService.favourites()\r\n                .then( userFavourites => {\r\n                console.log('userFavourites', userFavourites)\r\n                console.log('stopFromServer inside userFavourties, ', stopFromServer)\r\n                \r\n                let fave = false; // assume it's not favourite and then check\r\n                if (userFavourites.length > 0) \r\n                {userFavourites.forEach(favstop => { // look for each stop in user's favourite stops\r\n                 console.log(\"the type of \" + favstop._id + \" is: \" + typeof(favstop._id))\r\n                 console.log('the id from componentdid mountis this? ', id)\r\n                if (favstop._id === id) {\r\n                    console.log('we found a match')\r\n                    fave = true\r\n                }\r\n                })}\r\n            console.log('fave before setting state', fave)\r\n            this.setState({isFave: fave, stop: stopFromServer})\r\n            })\r\n            .catch(err => {\r\n                console.log('error from trying to update user likes, likely because we are not logged in', err)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('err from StopService.GetOne in componentDidmount', err)\r\n        })\r\n        \r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // compare props with next props?\r\n        return (this.state.isFave !== nextState.isFave)\r\n    }\r\n    \r\n    render() {\r\n \r\n        console.log('this.props.user from render', this.props.user)\r\n        \r\n        let mystop = this.state.stop\r\n        console.log('mystop in render comign from this.state', mystop)\r\n        console.log('this.state', this.state)\r\n        // let buses = mystop.busLines.map( bus => {\r\n        //     return `${bus}, ` })\r\n        // console.log('buses', buses)\r\n\r\n        // FUCKING HELL THIS NOW RENDERS IN LOGIN AND SIGNUP WTF??? update! now only after logging out\r\n        return (\r\n            // (this.state.isLoading? <h2>still loading page...</h2>\r\n            // : \r\n            <div>\r\n                <h1>{mystop.name}</h1>\r\n                <p>buses servicing this stop: {} </p> \r\n                {/* tried using spread to get the bus lines but nah dont work */}\r\n                {this.props.isLoggedIn\r\n                ? (this.state.isFave \r\n                    ? <button onClick={this.handleLike} style={ {backgroundColor: 'green'} } >is mah fave, unlike?</button>\r\n                    : <button onClick={this.handleLike} style={ {backgroundColor: 'red'} }>not fave, wanna save? </button> )\r\n                : <p>Log in to save this stop to favourites </p> }\r\n\r\n            </div>\r\n                \r\n        )    \r\n    }\r\n}\r\n\r\n//export default StopPage\r\nexport default withAuth(StopPage) // tried if this changes the fact that StopPage fucks up both login and signup","//axios.post('http://localhost:5666/auth/signup', { username, password }, { withCredentials: true })\r\nimport React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport axios from \"axios\"\r\nimport stopService from \"../lib/stop-service\"\r\nimport StopPage from '../pages/StopPage';\r\n\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        searchFor: \"\",\r\n        searchResults: []\r\n    } \r\n\r\n    componentDidMount() {\r\n        // 1) hard-coded version\r\n        // axios.get(\"http://localhost:5666/stops/\")\r\n        // .then( (response) => {\r\n        //     const serverData = response.data\r\n        //     console.log('serverData', serverData)\r\n        //     this.setState({data: serverData})\r\n        // } )\r\n        // 2) using stopService\r\n        stopService.getAll()\r\n        .then( serverData => {\r\n            console.log('serverData with stopService getAll me:', serverData)\r\n            this.setState({data: serverData})\r\n        })\r\n\r\n        .catch((err) => console.log(\"error while getting data from server\",err))\r\n    }\r\n\r\n    search = (text) => {\r\n        let filteredStops = this.state.data.filter( stop => {\r\n            return stop.name.toLowerCase().includes(text.toLowerCase())\r\n        } )\r\n        this.setState({searchResults: filteredStops})\r\n    }\r\n\r\n    handleSearchInput = (e) => {\r\n        let {value} = e.target;\r\n        //console.log('value from search:', value) // it works! no need to log this anymore\r\n        this.setState({searchFor: value}, () => {this.search(value)})\r\n    }\r\n\r\n    render() {\r\n        const stopsearch = this.state.searchResults\r\n        return (\r\n            <div>\r\n\r\n                <label>Search: </label>\r\n                <input \r\n                type=\"text\" \r\n                value={this.state.searchFor} \r\n                onChange={this.handleSearchInput} \r\n                placeholder=\"Search for stops\" />\r\n\r\n                <div>\r\n                    <p>trying to display search results here:</p>\r\n                    {stopsearch.map(stop => {               \r\n                        return (\r\n                            // using stopCode as key since they will NEVER change unless I purge the whole DB\r\n                            <div key={stop.stopCode}>\r\n                            <Link to={`/stops/${stop._id}`} >\r\n                                <h4>{stop.name}</h4>\r\n                            </Link>\r\n                            </div> // tried to add this inside first Link tag after to={}:  passingstuff={stop} but did not work\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Search from '../components/Search'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div> \r\n      <h1>Home Page</h1>\r\n        <Search/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nclass Signup extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    this.props.signup(username, password);\r\n    // this.props.signup method is coming from the AuthProvider\r\n    // injected by the withAuth() HOC\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Sign Up</h1>\r\n\r\n        {/* {this.props.errorMessage? <h1> {this.props.errorMessage} </h1> : null } */}\r\n\r\n        <form onSubmit={this.handleFormSubmit}>\r\n\r\n          <label>Username:</label>\r\n          <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n\r\n          <label>Password:</label>\r\n          <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n\r\n          <input type=\"submit\" value=\"Signup\" />\r\n        </form>\r\n\r\n        <p>Already have account?</p>\r\n        <Link to={\"/login\"}> Login</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nclass Login extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    this.props.login(username, password);\r\n    // this.props.login method is coming from the AuthProvider\r\n    // injected by the withAuth() HOC\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // handleOk = event => {\r\n  //   this.setState({ errorMessage: null })\r\n  // }\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n\r\n    // if (this.props.errorMessage) {\r\n    //   return (\r\n    //   <div>\r\n    //     <h1> {this.props.errorMessage} </h1>\r\n    //     <button onClick={this.handleOk} > OK I GUESS </button>\r\n\r\n    //   </div>)\r\n    // }\r\n      \r\n      return (\r\n\r\n        \r\n\r\n        <div>\r\n          <h1>Login</h1>\r\n\r\n          {/* {this.props.errorMessage? <h1> {this.props.errorMessage} </h1> : null } */}\r\n  \r\n          <form onSubmit={this.handleFormSubmit}>\r\n  \r\n            <label>Username:</label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n  \r\n            <label>Password:</label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n  \r\n            <input type=\"submit\" value=\"Login\" />\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withAuth(Login);\r\n","import React, { Component } from \"react\";\r\nimport { withAuth } from './../lib/Auth';\r\nimport userService from \"../lib/user-service\"\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport DeleteUser from \"../components/DeleteUser\";\r\n\r\n\r\nclass Private extends Component {\r\n\r\n  state = {\r\n    userFaves: null,\r\n    // not great. How can I destroy the user state as well? \r\n    // we have to get rid of ALL user data AND session. then we need to REDIRECT TO LOGIN\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // could I use this?????\r\n  }\r\n\r\n  componentDidMount() {\r\n    userService.favourites()\r\n    .then(arrayFromServer => {\r\n      console.log('got this array of bus stops from server:', arrayFromServer)\r\n      this.setState({userFaves: arrayFromServer})\r\n    })\r\n  }\r\n\r\n  // deleteMe = () => {\r\n  //   return userService.delete()\r\n  //   .then( deleted => {\r\n  //       console.log('deleted user, hopefully');\r\n  //       console.log('this.props after delete', this.props)\r\n  //       this.props.history.push(\"/\")\r\n        \r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Private Route, display my favourite stops here</h1>\r\n        {\r\n          this.props.isLoggedIn\r\n            ? <h3>Username: {this.props.user.username}</h3>\r\n            : null\r\n        }\r\n\r\n        {\r\n          this.state.userFaves !== null \r\n          ? (\r\n            this.state.userFaves.map(stop => {\r\n              return ( \r\n              <div key={stop.stopCode}> \r\n                <Link to={`/stops/${stop._id}`}> {stop.name}, code {stop.stopCode} </Link> \r\n              </div> )\r\n            })\r\n            \r\n            )\r\n          : null\r\n        }\r\n\r\n        {\r\n          this.props.isLoggedIn\r\n          ?  <button onClick={this.props.deleteUser}> Delete user?</button> // <DeleteUser/>\r\n          : null\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Private);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withAuth } from './../lib/Auth';\r\n\r\nfunction PublicRoute(props) {\r\n\r\n  console.log('props :>> ', props);\r\n\r\n  const { exact, path, component, isLoggedIn } = props;\r\n  const Component = component;\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props) => {\r\n        if (isLoggedIn) return <Redirect to=\"/private\" />\r\n        else if (!isLoggedIn) return <Component {...props} />\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default withAuth(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { withAuth } from '../lib/Auth';\r\n\r\nfunction PrivateRoute(props) {\r\n  console.log('props :>> ', props);\r\n\r\n  const { exact, path, component, isLoggedIn } = props;\r\n  const Component = component;\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props) => {\r\n        if (isLoggedIn) return <Component {...props} />\r\n        else if (!isLoggedIn) return <Redirect to=\"/login\" />\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default withAuth(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Private from './pages/Private';\r\nimport StopPage from './pages/StopPage';\r\n\r\nimport PublicRoute from './components/PublicRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Navbar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          {/* <PublicRoute exact path=\"/:stopID\"  component={Stop} /> use wikicountires as example!! */}\r\n          \r\n          <PublicRoute exact path=\"/signup\" component={Signup} />\r\n          <PublicRoute exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/stops/:id\" component={StopPage} />\r\n          <PrivateRoute exact path=\"/private\" component={Private} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport { AuthProvider } from './lib/Auth';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </Router>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}